'''
2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка элементов необходимо использовать функцию input().
'''

count = input("Введите количество элементов списка (не менее двух): ")
#традицонная проверка на корректность ввода
while not count.isdigit() or int(count) < 2:
    count = input("Введите количество элементов списка (пользуйтесь цифрами и вводите целое значение не менее двух): ")
count = int(count)
my_list = []
i = 0 #счетчик для while
el = 0 #счетчик для for

#цикл для добавления с список (пока счетчик не станет равен длине списка)
#с фичей "для красоты", чтобы сообщения для пользователя отличались в зависимости от того, какое по счету значение он вводит
while i < count:
    if i == 0:
        my_list.append(input("Введите первое значение для добавления в список: "))
    elif i == (count -1):
        my_list.append(input("Наконец введите последнее значение для добавления в список: "))
    else:
        my_list.append(input("Введите следующее значение для добавления в список: "))
    i += 1

print(f"Вот такой у нас классный список получился: {my_list}") #выводим изначальный список, будет сравнивать потом с получившимся результатом

'''цикл для обмена значениями, для того, чтобы определить количество обменов делим длину списка на 2 и приводим к int 
получится, что мы возвращаем интегральную часть перед десятичной точкой, отбрасывая либо 0, либо 5, фактически "округляем" в меньшую сторону.
Счетчик мы при этом увеличиваем на два, чтобы менять местами [0]\первое, [2]\третье и т.д. значения
т.е. если длина списка будет 4 - обмен будет произведен 2 раза, если 5, тоже два раза (при нечетном количестве элементов последний сохранится на своем месте)'''
for values in range(int(len(my_list)/2)):
        my_list[el], my_list[el + 1] = my_list [el + 1], my_list[el]
        el += 2
print(f"А теперь мы поменяли в нём местами значения соседних элементов, хоп! {my_list}")
